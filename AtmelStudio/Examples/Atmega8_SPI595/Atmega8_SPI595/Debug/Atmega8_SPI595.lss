
Atmega8_SPI595.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000062  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000124  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000057f  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000514  00000000  00000000  000006d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000208  00000000  00000000  00000be7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000df0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b1  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  000010e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	0f d0       	rcall	.+30     	; 0x52 <main>
  34:	14 c0       	rjmp	.+40     	; 0x5e <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <spi_ini>:
#define SS		PB2
#define MOSI	PB3
#define SCK		PB5

void spi_ini(void) {
	DDRB|=(1<<SS) | (1<<MOSI) | (1<<SCK);
  38:	87 b3       	in	r24, 0x17	; 23
  3a:	8c 62       	ori	r24, 0x2C	; 44
  3c:	87 bb       	out	0x17, r24	; 23
	PORTB|=(1<<SS);
  3e:	c2 9a       	sbi	0x18, 2	; 24
	
	SPCR|=(1<<SPE);// разрешить работу SPI
  40:	6e 9a       	sbi	0x0d, 6	; 13
	SPCR|=(1<<MSTR); // режим мастера
  42:	6c 9a       	sbi	0x0d, 4	; 13
  44:	08 95       	ret

00000046 <spi_595>:
}

void spi_595(uint8_t data){
	PORTB&=~(1<<SS);// начало работы
  46:	c2 98       	cbi	0x18, 2	; 24
	
	SPDR=data; // передача.
  48:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR&(1<<SPIF)));// ожидание конца передачи
  4a:	77 9b       	sbis	0x0e, 7	; 14
  4c:	fe cf       	rjmp	.-4      	; 0x4a <spi_595+0x4>
	
	PORTB|=(1<<SS);// конец работы
  4e:	c2 9a       	sbi	0x18, 2	; 24
  50:	08 95       	ret

00000052 <main>:
}

int main(void)
{
	spi_ini();
  52:	f2 df       	rcall	.-28     	; 0x38 <spi_ini>
	spi_595(0b00001111);
  54:	8f e0       	ldi	r24, 0x0F	; 15
  56:	f7 df       	rcall	.-18     	; 0x46 <spi_595>
	spi_595(0b11110000);
  58:	80 ef       	ldi	r24, 0xF0	; 240
  5a:	f5 df       	rcall	.-22     	; 0x46 <spi_595>
  5c:	ff cf       	rjmp	.-2      	; 0x5c <main+0xa>

0000005e <_exit>:
  5e:	f8 94       	cli

00000060 <__stop_program>:
  60:	ff cf       	rjmp	.-2      	; 0x60 <__stop_program>
