
Atmega8_PID.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000072e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800060  00800060  0000072e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000072e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000760  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b0e  00000000  00000000  000007fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077b  00000000  00000000  0000130a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000044e  00000000  00000000  00001a85  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000108  00000000  00000000  00001ed4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ae  00000000  00000000  00001fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ff  00000000  00000000  0000238a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002789  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea eb       	ldi	r30, 0xBA	; 186
  3a:	f6 e0       	ldi	r31, 0x06	; 6
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a8 37       	cpi	r26, 0x78	; 120
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	d6 d0       	rcall	.+428    	; 0x206 <main>
  5a:	2d c3       	rjmp	.+1626   	; 0x6b6 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <PID_calc>:
float error;
uint16_t Uset, Unow;


uint8_t PID_calc(uint16_t set, uint16_t real )
{
  5e:	4f 92       	push	r4
  60:	5f 92       	push	r5
  62:	6f 92       	push	r6
  64:	7f 92       	push	r7
  66:	8f 92       	push	r8
  68:	9f 92       	push	r9
  6a:	af 92       	push	r10
  6c:	bf 92       	push	r11
  6e:	cf 92       	push	r12
  70:	df 92       	push	r13
  72:	ef 92       	push	r14
  74:	ff 92       	push	r15
  76:	cf 93       	push	r28
  78:	df 93       	push	r29
  7a:	00 d0       	rcall	.+0      	; 0x7c <PID_calc+0x1e>
  7c:	00 d0       	rcall	.+0      	; 0x7e <PID_calc+0x20>
  7e:	cd b7       	in	r28, 0x3d	; 61
  80:	de b7       	in	r29, 0x3e	; 62
  82:	7b 01       	movw	r14, r22

	
	float dt=0.1;// период регул€тора
	
	// ¬ычисление ошибки
	error = (float)set - real;
  84:	bc 01       	movw	r22, r24
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	fc d1       	rcall	.+1016   	; 0x484 <__floatunsisf>
  8c:	4b 01       	movw	r8, r22
  8e:	5c 01       	movw	r10, r24
  90:	b7 01       	movw	r22, r14
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	f6 d1       	rcall	.+1004   	; 0x484 <__floatunsisf>
  98:	9b 01       	movw	r18, r22
  9a:	ac 01       	movw	r20, r24
  9c:	c5 01       	movw	r24, r10
  9e:	b4 01       	movw	r22, r8
  a0:	f4 d0       	rcall	.+488    	; 0x28a <__subsf3>
  a2:	6b 01       	movw	r12, r22
  a4:	7c 01       	movw	r14, r24
  a6:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <error>
  aa:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <error+0x1>
  ae:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <error+0x2>
  b2:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <error+0x3>
	
	// – составл€юща€ 
	float P = Kp * error;

	// I составл€юща€
	sum_error += error * dt;// сумма ошибок
  b6:	2d ec       	ldi	r18, 0xCD	; 205
  b8:	3c ec       	ldi	r19, 0xCC	; 204
  ba:	4c ec       	ldi	r20, 0xCC	; 204
  bc:	5d e3       	ldi	r21, 0x3D	; 61
  be:	98 d2       	rcall	.+1328   	; 0x5f0 <__mulsf3>
  c0:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <sum_error>
  c4:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <sum_error+0x1>
  c8:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <sum_error+0x2>
  cc:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <sum_error+0x3>
  d0:	dd d0       	rcall	.+442    	; 0x28c <__addsf3>
  d2:	4b 01       	movw	r8, r22
  d4:	5c 01       	movw	r10, r24
  d6:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <sum_error>
  da:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <sum_error+0x1>
  de:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <sum_error+0x2>
  e2:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <sum_error+0x3>
	// D составл€юща€
	float derivative = (error - pre_error) / dt;
	float D = Kd * derivative;

	// рассчет выхода
	output = P + I + D;
  e6:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <pre_error>
  ea:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <pre_error+0x1>
  ee:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <pre_error+0x2>
  f2:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <pre_error+0x3>
  f6:	c7 01       	movw	r24, r14
  f8:	b6 01       	movw	r22, r12
  fa:	c7 d0       	rcall	.+398    	; 0x28a <__subsf3>
  fc:	2d ec       	ldi	r18, 0xCD	; 205
  fe:	3c ec       	ldi	r19, 0xCC	; 204
 100:	4c ec       	ldi	r20, 0xCC	; 204
 102:	5d e3       	ldi	r21, 0x3D	; 61
 104:	2b d1       	rcall	.+598    	; 0x35c <__divsf3>
 106:	2a e0       	ldi	r18, 0x0A	; 10
 108:	37 ed       	ldi	r19, 0xD7	; 215
 10a:	43 e2       	ldi	r20, 0x23	; 35
 10c:	5c e3       	ldi	r21, 0x3C	; 60
 10e:	70 d2       	rcall	.+1248   	; 0x5f0 <__mulsf3>
 110:	69 83       	std	Y+1, r22	; 0x01
 112:	7a 83       	std	Y+2, r23	; 0x02
 114:	8b 83       	std	Y+3, r24	; 0x03
 116:	9c 83       	std	Y+4, r25	; 0x04
 118:	2d ec       	ldi	r18, 0xCD	; 205
 11a:	3c ec       	ldi	r19, 0xCC	; 204
 11c:	4c e4       	ldi	r20, 0x4C	; 76
 11e:	5d e3       	ldi	r21, 0x3D	; 61
 120:	c7 01       	movw	r24, r14
 122:	b6 01       	movw	r22, r12
 124:	65 d2       	rcall	.+1226   	; 0x5f0 <__mulsf3>
 126:	2b 01       	movw	r4, r22
 128:	3c 01       	movw	r6, r24
 12a:	2f e8       	ldi	r18, 0x8F	; 143
 12c:	32 ec       	ldi	r19, 0xC2	; 194
 12e:	45 ef       	ldi	r20, 0xF5	; 245
 130:	5c e3       	ldi	r21, 0x3C	; 60
 132:	c5 01       	movw	r24, r10
 134:	b4 01       	movw	r22, r8
 136:	5c d2       	rcall	.+1208   	; 0x5f0 <__mulsf3>
 138:	9b 01       	movw	r18, r22
 13a:	ac 01       	movw	r20, r24
 13c:	c3 01       	movw	r24, r6
 13e:	b2 01       	movw	r22, r4
 140:	a5 d0       	rcall	.+330    	; 0x28c <__addsf3>
 142:	9b 01       	movw	r18, r22
 144:	ac 01       	movw	r20, r24
 146:	69 81       	ldd	r22, Y+1	; 0x01
 148:	7a 81       	ldd	r23, Y+2	; 0x02
 14a:	8b 81       	ldd	r24, Y+3	; 0x03
 14c:	9c 81       	ldd	r25, Y+4	; 0x04
 14e:	9e d0       	rcall	.+316    	; 0x28c <__addsf3>
 150:	4b 01       	movw	r8, r22
 152:	5c 01       	movw	r10, r24
 154:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__data_end>
 158:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__data_end+0x1>
 15c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end+0x2>
 160:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__data_end+0x3>
	OUT=output;// 
 164:	60 93 74 00 	sts	0x0074, r22	; 0x800074 <OUT>
 168:	70 93 75 00 	sts	0x0075, r23	; 0x800075 <OUT+0x1>
 16c:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <OUT+0x2>
 170:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <OUT+0x3>
	
	// приводим выход в нужный диапазон
	if( output > 255 )
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	4f e7       	ldi	r20, 0x7F	; 127
 17a:	53 e4       	ldi	r21, 0x43	; 67
 17c:	35 d2       	rcall	.+1130   	; 0x5e8 <__gesf2>
 17e:	18 16       	cp	r1, r24
 180:	6c f4       	brge	.+26     	; 0x19c <PID_calc+0x13e>
	output = 255;
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	af e7       	ldi	r26, 0x7F	; 127
 188:	b3 e4       	ldi	r27, 0x43	; 67
 18a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_end>
 18e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_end+0x1>
 192:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_end+0x2>
 196:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_end+0x3>
 19a:	10 c0       	rjmp	.+32     	; 0x1bc <PID_calc+0x15e>
	else if( output < 0 )
 19c:	20 e0       	ldi	r18, 0x00	; 0
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	a9 01       	movw	r20, r18
 1a2:	c5 01       	movw	r24, r10
 1a4:	b4 01       	movw	r22, r8
 1a6:	d6 d0       	rcall	.+428    	; 0x354 <__cmpsf2>
 1a8:	88 23       	and	r24, r24
 1aa:	44 f4       	brge	.+16     	; 0x1bc <PID_calc+0x15e>
	output = 0;
 1ac:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_end>
 1b0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__data_end+0x1>
 1b4:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end+0x2>
 1b8:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__data_end+0x3>

	// предыдуща€ ошибка
	pre_error = error;
 1bc:	c0 92 6c 00 	sts	0x006C, r12	; 0x80006c <pre_error>
 1c0:	d0 92 6d 00 	sts	0x006D, r13	; 0x80006d <pre_error+0x1>
 1c4:	e0 92 6e 00 	sts	0x006E, r14	; 0x80006e <pre_error+0x2>
 1c8:	f0 92 6f 00 	sts	0x006F, r15	; 0x80006f <pre_error+0x3>
	
	return output;
 1cc:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_end>
 1d0:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__data_end+0x1>
 1d4:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end+0x2>
 1d8:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_end+0x3>
 1dc:	27 d1       	rcall	.+590    	; 0x42c <__fixunssfsi>
 1de:	86 2f       	mov	r24, r22
}
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	ff 90       	pop	r15
 1ee:	ef 90       	pop	r14
 1f0:	df 90       	pop	r13
 1f2:	cf 90       	pop	r12
 1f4:	bf 90       	pop	r11
 1f6:	af 90       	pop	r10
 1f8:	9f 90       	pop	r9
 1fa:	8f 90       	pop	r8
 1fc:	7f 90       	pop	r7
 1fe:	6f 90       	pop	r6
 200:	5f 90       	pop	r5
 202:	4f 90       	pop	r4
 204:	08 95       	ret

00000206 <main>:


int main(void)
{
	
	uart_ini();
 206:	3a d0       	rcall	.+116    	; 0x27c <uart_ini>
	
	DDRB|=(1<<PB1);
 208:	b9 9a       	sbi	0x17, 1	; 23
	
	// adc
	ADMUX|=(1<<MUX2) | (1<<MUX1);// канал 6
 20a:	87 b1       	in	r24, 0x07	; 7
 20c:	86 60       	ori	r24, 0x06	; 6
 20e:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(1<<ADEN)| (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);// 
 210:	86 b1       	in	r24, 0x06	; 6
 212:	87 68       	ori	r24, 0x87	; 135
 214:	86 b9       	out	0x06, r24	; 6
	
	// timer pwm
	DDRB|=(1<<PB3);
 216:	bb 9a       	sbi	0x17, 3	; 23
	TCCR2|=(1<<CS21); // div8
 218:	85 b5       	in	r24, 0x25	; 37
 21a:	82 60       	ori	r24, 0x02	; 2
 21c:	85 bd       	out	0x25, r24	; 37
	TCCR2|=(1<<WGM20); // PWM, Phase Correct 
 21e:	85 b5       	in	r24, 0x25	; 37
 220:	80 64       	ori	r24, 0x40	; 64
 222:	85 bd       	out	0x25, r24	; 37
	TCCR2|=(1<<COM21);// сброс по совпадению
 224:	85 b5       	in	r24, 0x25	; 37
 226:	80 62       	ori	r24, 0x20	; 32
 228:	85 bd       	out	0x25, r24	; 37
	OCR2=0;
 22a:	13 bc       	out	0x23, r1	; 35
    while (1) 
    {	
		
		if (PINB&(1<<PB0)) Uset=800;
		else Uset=450;
 22c:	02 ec       	ldi	r16, 0xC2	; 194
 22e:	11 e0       	ldi	r17, 0x01	; 1
	TCCR2|=(1<<COM21);// сброс по совпадению
	OCR2=0;
    while (1) 
    {	
		
		if (PINB&(1<<PB0)) Uset=800;
 230:	c0 e2       	ldi	r28, 0x20	; 32
 232:	d3 e0       	ldi	r29, 0x03	; 3
 234:	b0 9b       	sbis	0x16, 0	; 22
 236:	05 c0       	rjmp	.+10     	; 0x242 <main+0x3c>
 238:	d0 93 6b 00 	sts	0x006B, r29	; 0x80006b <Uset+0x1>
 23c:	c0 93 6a 00 	sts	0x006A, r28	; 0x80006a <Uset>
 240:	04 c0       	rjmp	.+8      	; 0x24a <main+0x44>
		else Uset=450;
 242:	10 93 6b 00 	sts	0x006B, r17	; 0x80006b <Uset+0x1>
 246:	00 93 6a 00 	sts	0x006A, r16	; 0x80006a <Uset>
	
		ADCSRA|=(1<<ADSC);
 24a:	36 9a       	sbi	0x06, 6	; 6
		while (ADCSRA&(1<<ADSC));
 24c:	36 99       	sbic	0x06, 6	; 6
 24e:	fe cf       	rjmp	.-4      	; 0x24c <main+0x46>
		Unow=ADC;
 250:	64 b1       	in	r22, 0x04	; 4
 252:	75 b1       	in	r23, 0x05	; 5
 254:	70 93 69 00 	sts	0x0069, r23	; 0x800069 <Unow+0x1>
 258:	60 93 68 00 	sts	0x0068, r22	; 0x800068 <Unow>
		OCR2=PID_calc(Uset, Unow);
 25c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <Uset>
 260:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <Uset+0x1>
 264:	fc de       	rcall	.-520    	; 0x5e <PID_calc>
 266:	83 bd       	out	0x23, r24	; 35
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 268:	2f ef       	ldi	r18, 0xFF	; 255
 26a:	80 e7       	ldi	r24, 0x70	; 112
 26c:	92 e0       	ldi	r25, 0x02	; 2
 26e:	21 50       	subi	r18, 0x01	; 1
 270:	80 40       	sbci	r24, 0x00	; 0
 272:	90 40       	sbci	r25, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <main+0x68>
 276:	00 c0       	rjmp	.+0      	; 0x278 <main+0x72>
 278:	00 00       	nop
 27a:	dc cf       	rjmp	.-72     	; 0x234 <main+0x2e>

0000027c <uart_ini>:
#include "monitor.h"

// 8 бит в пакете, бит четности - нет, 1 стоп бит. битрейт 9600
void uart_ini(void){
	UBRRL = (F_CPU/BAUDRATE/16-1); // ¬ычисл€ем скорость обмена данными
 27c:	83 e3       	ldi	r24, 0x33	; 51
 27e:	89 b9       	out	0x09, r24	; 9
	UBRRH = (F_CPU/BAUDRATE/16-1) >> 8;
 280:	10 bc       	out	0x20, r1	; 32
	UCSRB|=(1<<RXEN) | (1<<TXEN);// разрешить работу передатчика и приемника
 282:	8a b1       	in	r24, 0x0a	; 10
 284:	88 61       	ori	r24, 0x18	; 24
 286:	8a b9       	out	0x0a, r24	; 10
 288:	08 95       	ret

0000028a <__subsf3>:
 28a:	50 58       	subi	r21, 0x80	; 128

0000028c <__addsf3>:
 28c:	bb 27       	eor	r27, r27
 28e:	aa 27       	eor	r26, r26
 290:	0e d0       	rcall	.+28     	; 0x2ae <__addsf3x>
 292:	70 c1       	rjmp	.+736    	; 0x574 <__fp_round>
 294:	61 d1       	rcall	.+706    	; 0x558 <__fp_pscA>
 296:	30 f0       	brcs	.+12     	; 0x2a4 <__addsf3+0x18>
 298:	66 d1       	rcall	.+716    	; 0x566 <__fp_pscB>
 29a:	20 f0       	brcs	.+8      	; 0x2a4 <__addsf3+0x18>
 29c:	31 f4       	brne	.+12     	; 0x2aa <__addsf3+0x1e>
 29e:	9f 3f       	cpi	r25, 0xFF	; 255
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <__addsf3+0x1a>
 2a2:	1e f4       	brtc	.+6      	; 0x2aa <__addsf3+0x1e>
 2a4:	56 c1       	rjmp	.+684    	; 0x552 <__fp_nan>
 2a6:	0e f4       	brtc	.+2      	; 0x2aa <__addsf3+0x1e>
 2a8:	e0 95       	com	r30
 2aa:	e7 fb       	bst	r30, 7
 2ac:	4c c1       	rjmp	.+664    	; 0x546 <__fp_inf>

000002ae <__addsf3x>:
 2ae:	e9 2f       	mov	r30, r25
 2b0:	72 d1       	rcall	.+740    	; 0x596 <__fp_split3>
 2b2:	80 f3       	brcs	.-32     	; 0x294 <__addsf3+0x8>
 2b4:	ba 17       	cp	r27, r26
 2b6:	62 07       	cpc	r22, r18
 2b8:	73 07       	cpc	r23, r19
 2ba:	84 07       	cpc	r24, r20
 2bc:	95 07       	cpc	r25, r21
 2be:	18 f0       	brcs	.+6      	; 0x2c6 <__addsf3x+0x18>
 2c0:	71 f4       	brne	.+28     	; 0x2de <__addsf3x+0x30>
 2c2:	9e f5       	brtc	.+102    	; 0x32a <__addsf3x+0x7c>
 2c4:	8a c1       	rjmp	.+788    	; 0x5da <__fp_zero>
 2c6:	0e f4       	brtc	.+2      	; 0x2ca <__addsf3x+0x1c>
 2c8:	e0 95       	com	r30
 2ca:	0b 2e       	mov	r0, r27
 2cc:	ba 2f       	mov	r27, r26
 2ce:	a0 2d       	mov	r26, r0
 2d0:	0b 01       	movw	r0, r22
 2d2:	b9 01       	movw	r22, r18
 2d4:	90 01       	movw	r18, r0
 2d6:	0c 01       	movw	r0, r24
 2d8:	ca 01       	movw	r24, r20
 2da:	a0 01       	movw	r20, r0
 2dc:	11 24       	eor	r1, r1
 2de:	ff 27       	eor	r31, r31
 2e0:	59 1b       	sub	r21, r25
 2e2:	99 f0       	breq	.+38     	; 0x30a <__addsf3x+0x5c>
 2e4:	59 3f       	cpi	r21, 0xF9	; 249
 2e6:	50 f4       	brcc	.+20     	; 0x2fc <__addsf3x+0x4e>
 2e8:	50 3e       	cpi	r21, 0xE0	; 224
 2ea:	68 f1       	brcs	.+90     	; 0x346 <__addsf3x+0x98>
 2ec:	1a 16       	cp	r1, r26
 2ee:	f0 40       	sbci	r31, 0x00	; 0
 2f0:	a2 2f       	mov	r26, r18
 2f2:	23 2f       	mov	r18, r19
 2f4:	34 2f       	mov	r19, r20
 2f6:	44 27       	eor	r20, r20
 2f8:	58 5f       	subi	r21, 0xF8	; 248
 2fa:	f3 cf       	rjmp	.-26     	; 0x2e2 <__addsf3x+0x34>
 2fc:	46 95       	lsr	r20
 2fe:	37 95       	ror	r19
 300:	27 95       	ror	r18
 302:	a7 95       	ror	r26
 304:	f0 40       	sbci	r31, 0x00	; 0
 306:	53 95       	inc	r21
 308:	c9 f7       	brne	.-14     	; 0x2fc <__addsf3x+0x4e>
 30a:	7e f4       	brtc	.+30     	; 0x32a <__addsf3x+0x7c>
 30c:	1f 16       	cp	r1, r31
 30e:	ba 0b       	sbc	r27, r26
 310:	62 0b       	sbc	r22, r18
 312:	73 0b       	sbc	r23, r19
 314:	84 0b       	sbc	r24, r20
 316:	ba f0       	brmi	.+46     	; 0x346 <__addsf3x+0x98>
 318:	91 50       	subi	r25, 0x01	; 1
 31a:	a1 f0       	breq	.+40     	; 0x344 <__addsf3x+0x96>
 31c:	ff 0f       	add	r31, r31
 31e:	bb 1f       	adc	r27, r27
 320:	66 1f       	adc	r22, r22
 322:	77 1f       	adc	r23, r23
 324:	88 1f       	adc	r24, r24
 326:	c2 f7       	brpl	.-16     	; 0x318 <__addsf3x+0x6a>
 328:	0e c0       	rjmp	.+28     	; 0x346 <__addsf3x+0x98>
 32a:	ba 0f       	add	r27, r26
 32c:	62 1f       	adc	r22, r18
 32e:	73 1f       	adc	r23, r19
 330:	84 1f       	adc	r24, r20
 332:	48 f4       	brcc	.+18     	; 0x346 <__addsf3x+0x98>
 334:	87 95       	ror	r24
 336:	77 95       	ror	r23
 338:	67 95       	ror	r22
 33a:	b7 95       	ror	r27
 33c:	f7 95       	ror	r31
 33e:	9e 3f       	cpi	r25, 0xFE	; 254
 340:	08 f0       	brcs	.+2      	; 0x344 <__addsf3x+0x96>
 342:	b3 cf       	rjmp	.-154    	; 0x2aa <__addsf3+0x1e>
 344:	93 95       	inc	r25
 346:	88 0f       	add	r24, r24
 348:	08 f0       	brcs	.+2      	; 0x34c <__addsf3x+0x9e>
 34a:	99 27       	eor	r25, r25
 34c:	ee 0f       	add	r30, r30
 34e:	97 95       	ror	r25
 350:	87 95       	ror	r24
 352:	08 95       	ret

00000354 <__cmpsf2>:
 354:	d4 d0       	rcall	.+424    	; 0x4fe <__fp_cmp>
 356:	08 f4       	brcc	.+2      	; 0x35a <__cmpsf2+0x6>
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	08 95       	ret

0000035c <__divsf3>:
 35c:	0c d0       	rcall	.+24     	; 0x376 <__divsf3x>
 35e:	0a c1       	rjmp	.+532    	; 0x574 <__fp_round>
 360:	02 d1       	rcall	.+516    	; 0x566 <__fp_pscB>
 362:	40 f0       	brcs	.+16     	; 0x374 <__divsf3+0x18>
 364:	f9 d0       	rcall	.+498    	; 0x558 <__fp_pscA>
 366:	30 f0       	brcs	.+12     	; 0x374 <__divsf3+0x18>
 368:	21 f4       	brne	.+8      	; 0x372 <__divsf3+0x16>
 36a:	5f 3f       	cpi	r21, 0xFF	; 255
 36c:	19 f0       	breq	.+6      	; 0x374 <__divsf3+0x18>
 36e:	eb c0       	rjmp	.+470    	; 0x546 <__fp_inf>
 370:	51 11       	cpse	r21, r1
 372:	34 c1       	rjmp	.+616    	; 0x5dc <__fp_szero>
 374:	ee c0       	rjmp	.+476    	; 0x552 <__fp_nan>

00000376 <__divsf3x>:
 376:	0f d1       	rcall	.+542    	; 0x596 <__fp_split3>
 378:	98 f3       	brcs	.-26     	; 0x360 <__divsf3+0x4>

0000037a <__divsf3_pse>:
 37a:	99 23       	and	r25, r25
 37c:	c9 f3       	breq	.-14     	; 0x370 <__divsf3+0x14>
 37e:	55 23       	and	r21, r21
 380:	b1 f3       	breq	.-20     	; 0x36e <__divsf3+0x12>
 382:	95 1b       	sub	r25, r21
 384:	55 0b       	sbc	r21, r21
 386:	bb 27       	eor	r27, r27
 388:	aa 27       	eor	r26, r26
 38a:	62 17       	cp	r22, r18
 38c:	73 07       	cpc	r23, r19
 38e:	84 07       	cpc	r24, r20
 390:	38 f0       	brcs	.+14     	; 0x3a0 <__divsf3_pse+0x26>
 392:	9f 5f       	subi	r25, 0xFF	; 255
 394:	5f 4f       	sbci	r21, 0xFF	; 255
 396:	22 0f       	add	r18, r18
 398:	33 1f       	adc	r19, r19
 39a:	44 1f       	adc	r20, r20
 39c:	aa 1f       	adc	r26, r26
 39e:	a9 f3       	breq	.-22     	; 0x38a <__divsf3_pse+0x10>
 3a0:	33 d0       	rcall	.+102    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3a2:	0e 2e       	mov	r0, r30
 3a4:	3a f0       	brmi	.+14     	; 0x3b4 <__divsf3_pse+0x3a>
 3a6:	e0 e8       	ldi	r30, 0x80	; 128
 3a8:	30 d0       	rcall	.+96     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3aa:	91 50       	subi	r25, 0x01	; 1
 3ac:	50 40       	sbci	r21, 0x00	; 0
 3ae:	e6 95       	lsr	r30
 3b0:	00 1c       	adc	r0, r0
 3b2:	ca f7       	brpl	.-14     	; 0x3a6 <__divsf3_pse+0x2c>
 3b4:	29 d0       	rcall	.+82     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3b6:	fe 2f       	mov	r31, r30
 3b8:	27 d0       	rcall	.+78     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ba:	66 0f       	add	r22, r22
 3bc:	77 1f       	adc	r23, r23
 3be:	88 1f       	adc	r24, r24
 3c0:	bb 1f       	adc	r27, r27
 3c2:	26 17       	cp	r18, r22
 3c4:	37 07       	cpc	r19, r23
 3c6:	48 07       	cpc	r20, r24
 3c8:	ab 07       	cpc	r26, r27
 3ca:	b0 e8       	ldi	r27, 0x80	; 128
 3cc:	09 f0       	breq	.+2      	; 0x3d0 <__divsf3_pse+0x56>
 3ce:	bb 0b       	sbc	r27, r27
 3d0:	80 2d       	mov	r24, r0
 3d2:	bf 01       	movw	r22, r30
 3d4:	ff 27       	eor	r31, r31
 3d6:	93 58       	subi	r25, 0x83	; 131
 3d8:	5f 4f       	sbci	r21, 0xFF	; 255
 3da:	2a f0       	brmi	.+10     	; 0x3e6 <__divsf3_pse+0x6c>
 3dc:	9e 3f       	cpi	r25, 0xFE	; 254
 3de:	51 05       	cpc	r21, r1
 3e0:	68 f0       	brcs	.+26     	; 0x3fc <__divsf3_pse+0x82>
 3e2:	b1 c0       	rjmp	.+354    	; 0x546 <__fp_inf>
 3e4:	fb c0       	rjmp	.+502    	; 0x5dc <__fp_szero>
 3e6:	5f 3f       	cpi	r21, 0xFF	; 255
 3e8:	ec f3       	brlt	.-6      	; 0x3e4 <__divsf3_pse+0x6a>
 3ea:	98 3e       	cpi	r25, 0xE8	; 232
 3ec:	dc f3       	brlt	.-10     	; 0x3e4 <__divsf3_pse+0x6a>
 3ee:	86 95       	lsr	r24
 3f0:	77 95       	ror	r23
 3f2:	67 95       	ror	r22
 3f4:	b7 95       	ror	r27
 3f6:	f7 95       	ror	r31
 3f8:	9f 5f       	subi	r25, 0xFF	; 255
 3fa:	c9 f7       	brne	.-14     	; 0x3ee <__divsf3_pse+0x74>
 3fc:	88 0f       	add	r24, r24
 3fe:	91 1d       	adc	r25, r1
 400:	96 95       	lsr	r25
 402:	87 95       	ror	r24
 404:	97 f9       	bld	r25, 7
 406:	08 95       	ret
 408:	e1 e0       	ldi	r30, 0x01	; 1
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	bb 1f       	adc	r27, r27
 412:	62 17       	cp	r22, r18
 414:	73 07       	cpc	r23, r19
 416:	84 07       	cpc	r24, r20
 418:	ba 07       	cpc	r27, r26
 41a:	20 f0       	brcs	.+8      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41c:	62 1b       	sub	r22, r18
 41e:	73 0b       	sbc	r23, r19
 420:	84 0b       	sbc	r24, r20
 422:	ba 0b       	sbc	r27, r26
 424:	ee 1f       	adc	r30, r30
 426:	88 f7       	brcc	.-30     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 428:	e0 95       	com	r30
 42a:	08 95       	ret

0000042c <__fixunssfsi>:
 42c:	bc d0       	rcall	.+376    	; 0x5a6 <__fp_splitA>
 42e:	88 f0       	brcs	.+34     	; 0x452 <__fixunssfsi+0x26>
 430:	9f 57       	subi	r25, 0x7F	; 127
 432:	90 f0       	brcs	.+36     	; 0x458 <__fixunssfsi+0x2c>
 434:	b9 2f       	mov	r27, r25
 436:	99 27       	eor	r25, r25
 438:	b7 51       	subi	r27, 0x17	; 23
 43a:	a0 f0       	brcs	.+40     	; 0x464 <__stack+0x5>
 43c:	d1 f0       	breq	.+52     	; 0x472 <__stack+0x13>
 43e:	66 0f       	add	r22, r22
 440:	77 1f       	adc	r23, r23
 442:	88 1f       	adc	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	1a f0       	brmi	.+6      	; 0x44e <__fixunssfsi+0x22>
 448:	ba 95       	dec	r27
 44a:	c9 f7       	brne	.-14     	; 0x43e <__fixunssfsi+0x12>
 44c:	12 c0       	rjmp	.+36     	; 0x472 <__stack+0x13>
 44e:	b1 30       	cpi	r27, 0x01	; 1
 450:	81 f0       	breq	.+32     	; 0x472 <__stack+0x13>
 452:	c3 d0       	rcall	.+390    	; 0x5da <__fp_zero>
 454:	b1 e0       	ldi	r27, 0x01	; 1
 456:	08 95       	ret
 458:	c0 c0       	rjmp	.+384    	; 0x5da <__fp_zero>
 45a:	67 2f       	mov	r22, r23
 45c:	78 2f       	mov	r23, r24
 45e:	88 27       	eor	r24, r24
 460:	b8 5f       	subi	r27, 0xF8	; 248
 462:	39 f0       	breq	.+14     	; 0x472 <__stack+0x13>
 464:	b9 3f       	cpi	r27, 0xF9	; 249
 466:	cc f3       	brlt	.-14     	; 0x45a <__fixunssfsi+0x2e>
 468:	86 95       	lsr	r24
 46a:	77 95       	ror	r23
 46c:	67 95       	ror	r22
 46e:	b3 95       	inc	r27
 470:	d9 f7       	brne	.-10     	; 0x468 <__stack+0x9>
 472:	3e f4       	brtc	.+14     	; 0x482 <__stack+0x23>
 474:	90 95       	com	r25
 476:	80 95       	com	r24
 478:	70 95       	com	r23
 47a:	61 95       	neg	r22
 47c:	7f 4f       	sbci	r23, 0xFF	; 255
 47e:	8f 4f       	sbci	r24, 0xFF	; 255
 480:	9f 4f       	sbci	r25, 0xFF	; 255
 482:	08 95       	ret

00000484 <__floatunsisf>:
 484:	e8 94       	clt
 486:	09 c0       	rjmp	.+18     	; 0x49a <__floatsisf+0x12>

00000488 <__floatsisf>:
 488:	97 fb       	bst	r25, 7
 48a:	3e f4       	brtc	.+14     	; 0x49a <__floatsisf+0x12>
 48c:	90 95       	com	r25
 48e:	80 95       	com	r24
 490:	70 95       	com	r23
 492:	61 95       	neg	r22
 494:	7f 4f       	sbci	r23, 0xFF	; 255
 496:	8f 4f       	sbci	r24, 0xFF	; 255
 498:	9f 4f       	sbci	r25, 0xFF	; 255
 49a:	99 23       	and	r25, r25
 49c:	a9 f0       	breq	.+42     	; 0x4c8 <__floatsisf+0x40>
 49e:	f9 2f       	mov	r31, r25
 4a0:	96 e9       	ldi	r25, 0x96	; 150
 4a2:	bb 27       	eor	r27, r27
 4a4:	93 95       	inc	r25
 4a6:	f6 95       	lsr	r31
 4a8:	87 95       	ror	r24
 4aa:	77 95       	ror	r23
 4ac:	67 95       	ror	r22
 4ae:	b7 95       	ror	r27
 4b0:	f1 11       	cpse	r31, r1
 4b2:	f8 cf       	rjmp	.-16     	; 0x4a4 <__floatsisf+0x1c>
 4b4:	fa f4       	brpl	.+62     	; 0x4f4 <__floatsisf+0x6c>
 4b6:	bb 0f       	add	r27, r27
 4b8:	11 f4       	brne	.+4      	; 0x4be <__floatsisf+0x36>
 4ba:	60 ff       	sbrs	r22, 0
 4bc:	1b c0       	rjmp	.+54     	; 0x4f4 <__floatsisf+0x6c>
 4be:	6f 5f       	subi	r22, 0xFF	; 255
 4c0:	7f 4f       	sbci	r23, 0xFF	; 255
 4c2:	8f 4f       	sbci	r24, 0xFF	; 255
 4c4:	9f 4f       	sbci	r25, 0xFF	; 255
 4c6:	16 c0       	rjmp	.+44     	; 0x4f4 <__floatsisf+0x6c>
 4c8:	88 23       	and	r24, r24
 4ca:	11 f0       	breq	.+4      	; 0x4d0 <__floatsisf+0x48>
 4cc:	96 e9       	ldi	r25, 0x96	; 150
 4ce:	11 c0       	rjmp	.+34     	; 0x4f2 <__floatsisf+0x6a>
 4d0:	77 23       	and	r23, r23
 4d2:	21 f0       	breq	.+8      	; 0x4dc <__floatsisf+0x54>
 4d4:	9e e8       	ldi	r25, 0x8E	; 142
 4d6:	87 2f       	mov	r24, r23
 4d8:	76 2f       	mov	r23, r22
 4da:	05 c0       	rjmp	.+10     	; 0x4e6 <__floatsisf+0x5e>
 4dc:	66 23       	and	r22, r22
 4de:	71 f0       	breq	.+28     	; 0x4fc <__floatsisf+0x74>
 4e0:	96 e8       	ldi	r25, 0x86	; 134
 4e2:	86 2f       	mov	r24, r22
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	2a f0       	brmi	.+10     	; 0x4f4 <__floatsisf+0x6c>
 4ea:	9a 95       	dec	r25
 4ec:	66 0f       	add	r22, r22
 4ee:	77 1f       	adc	r23, r23
 4f0:	88 1f       	adc	r24, r24
 4f2:	da f7       	brpl	.-10     	; 0x4ea <__floatsisf+0x62>
 4f4:	88 0f       	add	r24, r24
 4f6:	96 95       	lsr	r25
 4f8:	87 95       	ror	r24
 4fa:	97 f9       	bld	r25, 7
 4fc:	08 95       	ret

000004fe <__fp_cmp>:
 4fe:	99 0f       	add	r25, r25
 500:	00 08       	sbc	r0, r0
 502:	55 0f       	add	r21, r21
 504:	aa 0b       	sbc	r26, r26
 506:	e0 e8       	ldi	r30, 0x80	; 128
 508:	fe ef       	ldi	r31, 0xFE	; 254
 50a:	16 16       	cp	r1, r22
 50c:	17 06       	cpc	r1, r23
 50e:	e8 07       	cpc	r30, r24
 510:	f9 07       	cpc	r31, r25
 512:	c0 f0       	brcs	.+48     	; 0x544 <__fp_cmp+0x46>
 514:	12 16       	cp	r1, r18
 516:	13 06       	cpc	r1, r19
 518:	e4 07       	cpc	r30, r20
 51a:	f5 07       	cpc	r31, r21
 51c:	98 f0       	brcs	.+38     	; 0x544 <__fp_cmp+0x46>
 51e:	62 1b       	sub	r22, r18
 520:	73 0b       	sbc	r23, r19
 522:	84 0b       	sbc	r24, r20
 524:	95 0b       	sbc	r25, r21
 526:	39 f4       	brne	.+14     	; 0x536 <__fp_cmp+0x38>
 528:	0a 26       	eor	r0, r26
 52a:	61 f0       	breq	.+24     	; 0x544 <__fp_cmp+0x46>
 52c:	23 2b       	or	r18, r19
 52e:	24 2b       	or	r18, r20
 530:	25 2b       	or	r18, r21
 532:	21 f4       	brne	.+8      	; 0x53c <__fp_cmp+0x3e>
 534:	08 95       	ret
 536:	0a 26       	eor	r0, r26
 538:	09 f4       	brne	.+2      	; 0x53c <__fp_cmp+0x3e>
 53a:	a1 40       	sbci	r26, 0x01	; 1
 53c:	a6 95       	lsr	r26
 53e:	8f ef       	ldi	r24, 0xFF	; 255
 540:	81 1d       	adc	r24, r1
 542:	81 1d       	adc	r24, r1
 544:	08 95       	ret

00000546 <__fp_inf>:
 546:	97 f9       	bld	r25, 7
 548:	9f 67       	ori	r25, 0x7F	; 127
 54a:	80 e8       	ldi	r24, 0x80	; 128
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	60 e0       	ldi	r22, 0x00	; 0
 550:	08 95       	ret

00000552 <__fp_nan>:
 552:	9f ef       	ldi	r25, 0xFF	; 255
 554:	80 ec       	ldi	r24, 0xC0	; 192
 556:	08 95       	ret

00000558 <__fp_pscA>:
 558:	00 24       	eor	r0, r0
 55a:	0a 94       	dec	r0
 55c:	16 16       	cp	r1, r22
 55e:	17 06       	cpc	r1, r23
 560:	18 06       	cpc	r1, r24
 562:	09 06       	cpc	r0, r25
 564:	08 95       	ret

00000566 <__fp_pscB>:
 566:	00 24       	eor	r0, r0
 568:	0a 94       	dec	r0
 56a:	12 16       	cp	r1, r18
 56c:	13 06       	cpc	r1, r19
 56e:	14 06       	cpc	r1, r20
 570:	05 06       	cpc	r0, r21
 572:	08 95       	ret

00000574 <__fp_round>:
 574:	09 2e       	mov	r0, r25
 576:	03 94       	inc	r0
 578:	00 0c       	add	r0, r0
 57a:	11 f4       	brne	.+4      	; 0x580 <__fp_round+0xc>
 57c:	88 23       	and	r24, r24
 57e:	52 f0       	brmi	.+20     	; 0x594 <__fp_round+0x20>
 580:	bb 0f       	add	r27, r27
 582:	40 f4       	brcc	.+16     	; 0x594 <__fp_round+0x20>
 584:	bf 2b       	or	r27, r31
 586:	11 f4       	brne	.+4      	; 0x58c <__fp_round+0x18>
 588:	60 ff       	sbrs	r22, 0
 58a:	04 c0       	rjmp	.+8      	; 0x594 <__fp_round+0x20>
 58c:	6f 5f       	subi	r22, 0xFF	; 255
 58e:	7f 4f       	sbci	r23, 0xFF	; 255
 590:	8f 4f       	sbci	r24, 0xFF	; 255
 592:	9f 4f       	sbci	r25, 0xFF	; 255
 594:	08 95       	ret

00000596 <__fp_split3>:
 596:	57 fd       	sbrc	r21, 7
 598:	90 58       	subi	r25, 0x80	; 128
 59a:	44 0f       	add	r20, r20
 59c:	55 1f       	adc	r21, r21
 59e:	59 f0       	breq	.+22     	; 0x5b6 <__fp_splitA+0x10>
 5a0:	5f 3f       	cpi	r21, 0xFF	; 255
 5a2:	71 f0       	breq	.+28     	; 0x5c0 <__fp_splitA+0x1a>
 5a4:	47 95       	ror	r20

000005a6 <__fp_splitA>:
 5a6:	88 0f       	add	r24, r24
 5a8:	97 fb       	bst	r25, 7
 5aa:	99 1f       	adc	r25, r25
 5ac:	61 f0       	breq	.+24     	; 0x5c6 <__fp_splitA+0x20>
 5ae:	9f 3f       	cpi	r25, 0xFF	; 255
 5b0:	79 f0       	breq	.+30     	; 0x5d0 <__fp_splitA+0x2a>
 5b2:	87 95       	ror	r24
 5b4:	08 95       	ret
 5b6:	12 16       	cp	r1, r18
 5b8:	13 06       	cpc	r1, r19
 5ba:	14 06       	cpc	r1, r20
 5bc:	55 1f       	adc	r21, r21
 5be:	f2 cf       	rjmp	.-28     	; 0x5a4 <__fp_split3+0xe>
 5c0:	46 95       	lsr	r20
 5c2:	f1 df       	rcall	.-30     	; 0x5a6 <__fp_splitA>
 5c4:	08 c0       	rjmp	.+16     	; 0x5d6 <__fp_splitA+0x30>
 5c6:	16 16       	cp	r1, r22
 5c8:	17 06       	cpc	r1, r23
 5ca:	18 06       	cpc	r1, r24
 5cc:	99 1f       	adc	r25, r25
 5ce:	f1 cf       	rjmp	.-30     	; 0x5b2 <__fp_splitA+0xc>
 5d0:	86 95       	lsr	r24
 5d2:	71 05       	cpc	r23, r1
 5d4:	61 05       	cpc	r22, r1
 5d6:	08 94       	sec
 5d8:	08 95       	ret

000005da <__fp_zero>:
 5da:	e8 94       	clt

000005dc <__fp_szero>:
 5dc:	bb 27       	eor	r27, r27
 5de:	66 27       	eor	r22, r22
 5e0:	77 27       	eor	r23, r23
 5e2:	cb 01       	movw	r24, r22
 5e4:	97 f9       	bld	r25, 7
 5e6:	08 95       	ret

000005e8 <__gesf2>:
 5e8:	8a df       	rcall	.-236    	; 0x4fe <__fp_cmp>
 5ea:	08 f4       	brcc	.+2      	; 0x5ee <__gesf2+0x6>
 5ec:	8f ef       	ldi	r24, 0xFF	; 255
 5ee:	08 95       	ret

000005f0 <__mulsf3>:
 5f0:	0b d0       	rcall	.+22     	; 0x608 <__mulsf3x>
 5f2:	c0 cf       	rjmp	.-128    	; 0x574 <__fp_round>
 5f4:	b1 df       	rcall	.-158    	; 0x558 <__fp_pscA>
 5f6:	28 f0       	brcs	.+10     	; 0x602 <__mulsf3+0x12>
 5f8:	b6 df       	rcall	.-148    	; 0x566 <__fp_pscB>
 5fa:	18 f0       	brcs	.+6      	; 0x602 <__mulsf3+0x12>
 5fc:	95 23       	and	r25, r21
 5fe:	09 f0       	breq	.+2      	; 0x602 <__mulsf3+0x12>
 600:	a2 cf       	rjmp	.-188    	; 0x546 <__fp_inf>
 602:	a7 cf       	rjmp	.-178    	; 0x552 <__fp_nan>
 604:	11 24       	eor	r1, r1
 606:	ea cf       	rjmp	.-44     	; 0x5dc <__fp_szero>

00000608 <__mulsf3x>:
 608:	c6 df       	rcall	.-116    	; 0x596 <__fp_split3>
 60a:	a0 f3       	brcs	.-24     	; 0x5f4 <__mulsf3+0x4>

0000060c <__mulsf3_pse>:
 60c:	95 9f       	mul	r25, r21
 60e:	d1 f3       	breq	.-12     	; 0x604 <__mulsf3+0x14>
 610:	95 0f       	add	r25, r21
 612:	50 e0       	ldi	r21, 0x00	; 0
 614:	55 1f       	adc	r21, r21
 616:	62 9f       	mul	r22, r18
 618:	f0 01       	movw	r30, r0
 61a:	72 9f       	mul	r23, r18
 61c:	bb 27       	eor	r27, r27
 61e:	f0 0d       	add	r31, r0
 620:	b1 1d       	adc	r27, r1
 622:	63 9f       	mul	r22, r19
 624:	aa 27       	eor	r26, r26
 626:	f0 0d       	add	r31, r0
 628:	b1 1d       	adc	r27, r1
 62a:	aa 1f       	adc	r26, r26
 62c:	64 9f       	mul	r22, r20
 62e:	66 27       	eor	r22, r22
 630:	b0 0d       	add	r27, r0
 632:	a1 1d       	adc	r26, r1
 634:	66 1f       	adc	r22, r22
 636:	82 9f       	mul	r24, r18
 638:	22 27       	eor	r18, r18
 63a:	b0 0d       	add	r27, r0
 63c:	a1 1d       	adc	r26, r1
 63e:	62 1f       	adc	r22, r18
 640:	73 9f       	mul	r23, r19
 642:	b0 0d       	add	r27, r0
 644:	a1 1d       	adc	r26, r1
 646:	62 1f       	adc	r22, r18
 648:	83 9f       	mul	r24, r19
 64a:	a0 0d       	add	r26, r0
 64c:	61 1d       	adc	r22, r1
 64e:	22 1f       	adc	r18, r18
 650:	74 9f       	mul	r23, r20
 652:	33 27       	eor	r19, r19
 654:	a0 0d       	add	r26, r0
 656:	61 1d       	adc	r22, r1
 658:	23 1f       	adc	r18, r19
 65a:	84 9f       	mul	r24, r20
 65c:	60 0d       	add	r22, r0
 65e:	21 1d       	adc	r18, r1
 660:	82 2f       	mov	r24, r18
 662:	76 2f       	mov	r23, r22
 664:	6a 2f       	mov	r22, r26
 666:	11 24       	eor	r1, r1
 668:	9f 57       	subi	r25, 0x7F	; 127
 66a:	50 40       	sbci	r21, 0x00	; 0
 66c:	8a f0       	brmi	.+34     	; 0x690 <__mulsf3_pse+0x84>
 66e:	e1 f0       	breq	.+56     	; 0x6a8 <__mulsf3_pse+0x9c>
 670:	88 23       	and	r24, r24
 672:	4a f0       	brmi	.+18     	; 0x686 <__mulsf3_pse+0x7a>
 674:	ee 0f       	add	r30, r30
 676:	ff 1f       	adc	r31, r31
 678:	bb 1f       	adc	r27, r27
 67a:	66 1f       	adc	r22, r22
 67c:	77 1f       	adc	r23, r23
 67e:	88 1f       	adc	r24, r24
 680:	91 50       	subi	r25, 0x01	; 1
 682:	50 40       	sbci	r21, 0x00	; 0
 684:	a9 f7       	brne	.-22     	; 0x670 <__mulsf3_pse+0x64>
 686:	9e 3f       	cpi	r25, 0xFE	; 254
 688:	51 05       	cpc	r21, r1
 68a:	70 f0       	brcs	.+28     	; 0x6a8 <__mulsf3_pse+0x9c>
 68c:	5c cf       	rjmp	.-328    	; 0x546 <__fp_inf>
 68e:	a6 cf       	rjmp	.-180    	; 0x5dc <__fp_szero>
 690:	5f 3f       	cpi	r21, 0xFF	; 255
 692:	ec f3       	brlt	.-6      	; 0x68e <__mulsf3_pse+0x82>
 694:	98 3e       	cpi	r25, 0xE8	; 232
 696:	dc f3       	brlt	.-10     	; 0x68e <__mulsf3_pse+0x82>
 698:	86 95       	lsr	r24
 69a:	77 95       	ror	r23
 69c:	67 95       	ror	r22
 69e:	b7 95       	ror	r27
 6a0:	f7 95       	ror	r31
 6a2:	e7 95       	ror	r30
 6a4:	9f 5f       	subi	r25, 0xFF	; 255
 6a6:	c1 f7       	brne	.-16     	; 0x698 <__mulsf3_pse+0x8c>
 6a8:	fe 2b       	or	r31, r30
 6aa:	88 0f       	add	r24, r24
 6ac:	91 1d       	adc	r25, r1
 6ae:	96 95       	lsr	r25
 6b0:	87 95       	ror	r24
 6b2:	97 f9       	bld	r25, 7
 6b4:	08 95       	ret

000006b6 <_exit>:
 6b6:	f8 94       	cli

000006b8 <__stop_program>:
 6b8:	ff cf       	rjmp	.-2      	; 0x6b8 <__stop_program>
