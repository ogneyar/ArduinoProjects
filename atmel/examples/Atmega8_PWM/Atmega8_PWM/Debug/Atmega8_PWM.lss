
Atmega8_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000005a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000011c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000054a  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004c7  00000000  00000000  00000696  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000204  00000000  00000000  00000b5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000d64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b0  00000000  00000000  00000da8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00001058  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	0f d0       	rcall	.+30     	; 0x52 <main>
  34:	10 c0       	rjmp	.+32     	; 0x56 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <fase_correct_pwm>:
	
	DDRB|=(1<<PB3);// пин OC2 на выход
}

void fase_correct_pwm(void){
	TCCR2|=(1<<WGM20); // выбор режима - fase correct PWM
  38:	85 b5       	in	r24, 0x25	; 37
  3a:	80 64       	ori	r24, 0x40	; 64
  3c:	85 bd       	out	0x25, r24	; 37
	
	//TCCR2|=(1<<COM21);// отсчет вверх OCR2=TCNT2 - сброс, отсчет вниз OCR2=TCNT2 - установка(не инверсный режим)
	TCCR2|=(1<<COM21) | (1<<COM20); // отсчет вверх OCR2=TCNT2 - установка, отсчет вниз OCR2=TCNT2 - сброс (инверсный режим)
  3e:	85 b5       	in	r24, 0x25	; 37
  40:	80 63       	ori	r24, 0x30	; 48
  42:	85 bd       	out	0x25, r24	; 37
	
	TCCR2|=(1<<CS22); // делитель 64
  44:	85 b5       	in	r24, 0x25	; 37
  46:	84 60       	ori	r24, 0x04	; 4
  48:	85 bd       	out	0x25, r24	; 37
	
	OCR2=10;// регистр сравнения
  4a:	8a e0       	ldi	r24, 0x0A	; 10
  4c:	83 bd       	out	0x23, r24	; 35
	
	DDRB|=(1<<PB3);// пин OC2 на выход
  4e:	bb 9a       	sbi	0x17, 3	; 23
  50:	08 95       	ret

00000052 <main>:
}

int main(void)
{
	fase_correct_pwm();
  52:	f2 df       	rcall	.-28     	; 0x38 <fase_correct_pwm>
  54:	ff cf       	rjmp	.-2      	; 0x54 <main+0x2>

00000056 <_exit>:
  56:	f8 94       	cli

00000058 <__stop_program>:
  58:	ff cf       	rjmp	.-2      	; 0x58 <__stop_program>
